<Window x:Class="FluGASv25.Views.MinionParameterView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:l="http://schemas.livet-mvvm.net/2011/wpf"
    xmlns:v="clr-namespace:FluGASv25.Views"
    xmlns:vm="clr-namespace:FluGASv25.ViewModels"
        Title="MinION parameter settings"
        Name="minionparameter" 
        Width="600"
        Height="620">
    <Window.DataContext>
        <vm:MinionParameterViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary Source="Styles.xaml" />
    </Window.Resources>

    <behaviors:Interaction.Triggers>
        <!--  When ContentRendered event raised, Initialize method of ViewModel would be called.  -->
        <behaviors:EventTrigger EventName="ContentRendered">
            <l:LivetCallMethodAction MethodName="Initialize" MethodTarget="{Binding}" />
        </behaviors:EventTrigger>

        <!--  Dispose method is called, when Window closing.  -->
        <behaviors:EventTrigger EventName="Closed">
            <l:DataContextDisposeAction />
        </behaviors:EventTrigger>

        <!--  If you make user choose 'OK or Cancel' closing Window, then please use Window Close cancel Behavior.  -->
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Information">
            <l:InformationDialogInteractionMessageAction/>
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Confirm">
            <l:ConfirmationDialogInteractionMessageAction />
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Error">
            <l:InformationDialogInteractionMessageAction/>
        </l:InteractionMessageTrigger>
        <l:InteractionMessageTrigger Messenger="{Binding Messenger}" MessageKey="Close" >
            <l:WindowInteractionMessageAction />
        </l:InteractionMessageTrigger>
    </behaviors:Interaction.Triggers>

    <ScrollViewer VerticalScrollBarVisibility="Visible" >
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="50" />
                <RowDefinition Height="*" />
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="3"/>
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Row="0" Grid.Column="1" Background="#eae7e7" 
            HorizontalAlignment="Stretch" VerticalAlignment="Top">
            　【MinION Parameter】<LineBreak/>
            　解析実行時のパラメータをセットします。<LineBreak/>
            </TextBlock>
            <Grid Grid.Column="1" Background="#eae7e7"  Grid.RowSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="5"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="1"/>
                </Grid.ColumnDefinitions>


                <StackPanel Grid.Column="1" Grid.Row="0" >
                    <!-- Parameter name; -->
                    <GroupBox  
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Background="#f9f8eb"
                        FontSize="20"
                        Margin="10,0,20,0"
                        Header="Parameter name.">
                        <StackPanel>
                            <Label FontSize="10" Margin="15,0,0,0" Content="MinIon Pararameter Name" />
                            <StackPanel Orientation="Horizontal">
                                <TextBox FontSize="18" Height="25" Width="300" Margin="10,0,0,0"
                                    Text="{Binding Name,  ValidatesOnDataErrors=True}"/>
                                <Button VerticalAlignment="Bottom" Margin="10,0,0,0"
                                    Style="{StaticResource FlatButton}"
                                    FontSize="10" 
                                    Content=" Commit "
                                    Command="{Binding MinionParameterCommitCommand}" />
                            </StackPanel>
                            <Label/>
                            <CheckBox Content=" Analysis target is top3" x:Name="Top3target" FontSize="12" Margin="18,0,0,0"
                                        IsChecked="{Binding IsAnalysisTop3}"/>

                        </StackPanel>
                    </GroupBox>

                    <!-- Convert tool; -->
                    <GroupBox Background="#f9f8eb" FontSize="20" Margin="10,0,20,0" Header="Convert tool Select.">
                        <StackPanel>

                            <GroupBox Background="#f9f8eb" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,0,10,5">
                                <GroupBox.Header>
                                    <CheckBox Content="Guppy" x:Name="Guppy" FontSize="14" Margin="10,0,0,0" IsChecked="True" IsEnabled="False"/>
                                </GroupBox.Header>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                    IsEnabled="{Binding ElementName=Guppy, Path=IsChecked}">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <Label VerticalAlignment="Top"  Margin="15,0,0,0"  Style="{StaticResource BaseLabel}"  Content="Program Path" />
                                            <TextBox FontSize="14" Height="25" Width="300" Margin="10,0,0,0"
                                                x:Name="GuppyPath" ToolTip="Set Guppy bin-folder, include [guppy_basecaller.exe]"
                                                IsEnabled="False"
                                                Text="{Binding GuppyBinDirectory}" />
                                            <Button  VerticalAlignment="Bottom" Margin="10,0,10,0"
                                                Style="{StaticResource FlatButton}" FontSize="10" 
                                                Command="{Binding GuppySelectCommand}" 
                                                Content="select"/>
                                        </StackPanel>
                                    </StackPanel>
                                </Grid>
                            </GroupBox>


                        </StackPanel>
                    </GroupBox>
                    <!-- Mapping tool Selection -->
                    <GroupBox Background="#f9f8eb" FontSize="20" Margin="10,0,20,0" Header="Mapping tool Select.">
                        <StackPanel>

                            <GroupBox  Background="#f9f8eb" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,0,10,5">
                                <GroupBox.Header>
                                    <CheckBox Content="GuppyAligner" x:Name="GuppyAligner" FontSize="14" Margin="10,0,0,0"
                                        IsEnabled="{Binding IsGuppyExist}"
                                        IsChecked="{Binding IsGuppyAlign,  ValidatesOnDataErrors=True}"/>
                                </GroupBox.Header>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsEnabled="{Binding ElementName=GuppyAligner, Path=IsChecked}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <!-- Option header-->
                                        <ColumnDefinition Width="2*"/>
                                        <!-- Option parameter name-->
                                        <ColumnDefinition Width="6*"/>
                                        <!-- Option parameter value-->
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Row="0" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource BaseLabel}" Content="Minimum coverage" />
                                    <TextBox Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource PropatiesTextBox}" 
                                        Text="{Binding GuppyMinCover,  ValidatesOnDataErrors=True}"/>
                                </Grid>
                            </GroupBox>

                            <GroupBox  Background="#f9f8eb" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="10,0,10,5">
                                <GroupBox.Header>
                                    <CheckBox Content="minimap2" x:Name="minimap2" FontSize="14" Margin="10,0,0,0"
                                    IsChecked="{Binding IsMinimap2,  ValidatesOnDataErrors=True}"/>
                                </GroupBox.Header>
                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsEnabled="{Binding ElementName=minimap2, Path=IsChecked}" Margin="30,0,0,0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <!-- Option header-->
                                        <ColumnDefinition Width="2*"/>
                                        <!-- Option parameter name-->
                                        <ColumnDefinition Width="2*"/>
                                        <!-- Option parameter value-->
                                        <ColumnDefinition Width="2*"/>
                                        <!-- parameter description-->
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Row="0" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource BaseLabel}" FontWeight="Bold"
                                        Content="Indexing:" />
                                    <Label Grid.Row="2" Grid.Column="0" HorizontalAlignment="Right" VerticalAlignment="Center" Style="{StaticResource BaseLabel}" FontWeight="Bold"
                                        Content="Alignment:" />

                                    <Label Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource BaseLabel}"
                                        Content="k-mer size " />
                                    <Label Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource BaseLabel}"
                                        Content="minizer window size " />
                                    <Label Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource BaseLabel}"
                                        Content="matching score " />
                                    <Label Grid.Row="3" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource BaseLabel}"
                                        Content="mismatch penalty" />
                                    <Label Grid.Row="4" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource BaseLabel}"
                                        Content="gap open penalty " />
                                    <Label Grid.Row="5" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource BaseLabel}"
                                        Content="gap extension penalty" />

                                    <TextBox Grid.Row="0" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource PropatiesTextBox}" 
                                        Text="{Binding Minimap2KmerSize,  ValidatesOnDataErrors=True}"/>
                                    <TextBox Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource PropatiesTextBox}" 
                                        Text="{Binding Minimap2MinWindowSize,  ValidatesOnDataErrors=True}"/>
                                    <TextBox Grid.Row="2" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource PropatiesTextBox}" 
                                        Text="{Binding Minimap2MatchingScore,  ValidatesOnDataErrors=True}"/>
                                    <TextBox Grid.Row="3" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource PropatiesTextBox}" 
                                        Text="{Binding Minimap2MismachPenalty,  ValidatesOnDataErrors=True}"/>
                                    <TextBox Grid.Row="4" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource PropatiesTextBox}" 
                                        Text="{Binding Minimap2GapOpenPenalty,  ValidatesOnDataErrors=True}"/>
                                    <TextBox Grid.Row="5" Grid.Column="2" HorizontalAlignment="Left" VerticalAlignment="Center" Style="{StaticResource PropatiesTextBox}" 
                                        Text="{Binding Minimap2GapExtentionPenalty,  ValidatesOnDataErrors=True}"/>
                                </Grid>
                            </GroupBox>

                        </StackPanel>
                    </GroupBox>
                    <v:CommonParameterView x:Name="CommonParameterWithMinion"/>
                </StackPanel>
            </Grid>
            <Button Grid.Column="1" Grid.Row="7" Margin="0,0,10,0"
                Content="  Commit  " HorizontalAlignment="Right"
                Style="{StaticResource FlatButton}"
                Command="{Binding MinionParameterCommitCommand}" />
            <Button Grid.Column="1" Grid.Row="7"
                Content="  Cancel  " HorizontalAlignment="Left"
                Style="{StaticResource FlatButton}"
                Command="{Binding MinionParameterCancelCommand}" />
        </Grid>

    </ScrollViewer>

</Window>
